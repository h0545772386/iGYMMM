<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:properties="clr-namespace:iGYMMM.Properties"
                    xmlns:converter="clr-namespace:iGYMMM">

    <converter:DateTimeConverter x:Key="dateTimeConverter" />
    <SolidColorBrush x:Key="blue1"
                     Color="#2196f5"></SolidColorBrush>
    <SolidColorBrush x:Key="blue2"
                     Color="#03A9f5"></SolidColorBrush>
    <SolidColorBrush x:Key="blue3"
                     Color="#00BCD5"></SolidColorBrush>
    <SolidColorBrush x:Key="blue4"
                     Color="#009788"></SolidColorBrush>
    <SolidColorBrush x:Key="blue5"
                     Color="#4CBC50"></SolidColorBrush>

    <Style TargetType="CheckBox">
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="FontSize"
                Value="12"></Setter>
        <Setter Property="FontFamily"
                Value="Arial"></Setter>
        <Setter Property="FontWeight"
                Value="Medium"></Setter>
        <Setter Property="Height"
                Value="40"></Setter>
    </Style>
    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="FontSize"
                Value="12"></Setter>
        <Setter Property="FontFamily"
                Value="Arial"></Setter>
        <Setter Property="FontWeight"
                Value="Medium"></Setter>
    </Style>
    <Style TargetType="PasswordBox">
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="FontSize"
                Value="12"></Setter>
        <Setter Property="FontFamily"
                Value="Arial"></Setter>
        <Setter Property="FontWeight"
                Value="Medium"></Setter>
        <Setter Property="Height"
                Value="40"></Setter>
    </Style>
    <Style x:Key="defIcoTextblock"
           TargetType="TextBlock">
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="FontSize"
                Value="20"></Setter>
        <Setter Property="Margin"
                Value="10,0"></Setter>
        <Setter Property="FontFamily"
                Value="Segoe MDL2 Assets" />
    </Style>
    <Style TargetType="{x:Type mah:DateTimePicker}">
        <Setter Property="Height"
                Value="40"></Setter>
        <Setter Property="FontSize"
                Value="12"></Setter>
        <Setter Property="FontFamily"
                Value="Arial"></Setter>
        <Setter Property="FontWeight"
                Value="Medium"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
    </Style>
    <Style TargetType="DatePicker">
        <Setter Property="Height"
                Value="40"></Setter>
        <Setter Property="FontSize"
                Value="12"></Setter>
        <Setter Property="FontFamily"
                Value="Arial"></Setter>
        <Setter Property="FontWeight"
                Value="Medium"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
    </Style>
    <Style  TargetType="TextBox">
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="FontSize"
                Value="12"></Setter>
        <Setter Property="FontFamily"
                Value="Arial"></Setter>
        <Setter Property="FontWeight"
                Value="Medium"></Setter>
        <Setter Property="Height"
                Value="40"></Setter>
    </Style>
    <Style x:Key="numText"
           TargetType="{x:Type converter:NumberText}">
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="FontSize"
                Value="12"></Setter>
        <Setter Property="FontFamily"
                Value="Arial"></Setter>
        <Setter Property="FontWeight"
                Value="Medium"></Setter>
        <Setter Property="Height"
                Value="40"></Setter>
        <Setter Property="InputMethod.IsInputMethodEnabled"
                Value="False"></Setter>
    </Style>
    <Style x:Key="imgButton"
           TargetType="Button">
        <Setter Property="Foreground"
                Value="Black"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="FontSize"
                Value="12"></Setter>
        <Setter Property="FontFamily"
                Value="Arial"></Setter>
        <Setter Property="FontWeight"
                Value="Medium"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="0"
                            CornerRadius="10"
                            Background="{TemplateBinding Background}"
                            Name="PART_Background1">
                        <ContentPresenter  Content="{TemplateBinding ContentControl.Content}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--当鼠标悬停在按钮上方时，按钮形态设置-->
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="LightBlue"
                                    TargetName="PART_Background1" />
                        </Trigger>
                        <!--当鼠标按下时，按钮形态设置-->
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Opacity"
                                    Value="0.4"
                                    TargetName="PART_Background1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="defButton"
           TargetType="Button">
        <Setter Property="Foreground"
                Value="White"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="FontSize"
                Value="12"></Setter>
        <Setter Property="FontFamily"
                Value="Arial"></Setter>
        <Setter Property="FontWeight"
                Value="Medium"></Setter>
        <Setter Property="Height"
                Value="40"></Setter>
        <Setter Property="Width"
                Value="140"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{StaticResource blue2}"
                            BorderThickness="0"
                            CornerRadius="12"
                            Background="{StaticResource blue2}"
                            Name="PART_Background1">
                        <ContentPresenter  Content="{TemplateBinding ContentControl.Content}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--当鼠标悬停在按钮上方时，按钮形态设置-->
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource blue1}"
                                    TargetName="PART_Background1" />
                        </Trigger>
                        <!--当鼠标按下时，按钮形态设置-->
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="Black"
                                    TargetName="PART_Background1"></Setter>
                            <Setter Property="BorderThickness"
                                    Value="2"
                                    TargetName="PART_Background1"></Setter>
                            <Setter Property="Opacity"
                                    Value="0.5"
                                    TargetName="PART_Background1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ucback"
           TargetType="UserControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="UserControl">
                    <Border x:Name="bdShadow"
                            Background="{TemplateBinding Background}"
                            Margin="3,0"
                            BorderBrush="#dedede"
                            BorderThickness="1,0,0,0">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0"
                                              BlurRadius="12"
                                              Opacity="0.3" />
                        </Border.Effect>
                        <Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="SizeChanged">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     Duration="0:0:0.5"
                                                     From="0.5"
                                                     To="1"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="header"
           TargetType="{x:Type mah:Tile}">
        <Setter Property="Height"
                Value="40"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="Foreground"
                Value="Gray"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Left"></Setter>
    </Style>

    <Style x:Key="defWindow"
           TargetType="{x:Type mah:MetroWindow}">
        <Setter Property="Icon"
                Value="Images/2.256x256 transparent.ico" />
        <Setter Property="FlowDirection"
                Value="RightToLeft" />
        <Setter Property="FontSize"
                Value="{Binding Source={x:Static properties:Settings.Default }, Path=AppFont}" />
        <Setter Property="FontWeight"
                Value="Medium" />
        <Setter Property="FontFamily"
                Value="Arial" />
        <Setter Property="ShowCloseButton"
                Value="True" />
        <Setter Property="ShowMaxRestoreButton"
                Value="False" />
        <Setter Property="ShowMinButton"
                Value="True" />
        <Setter Property="ResizeMode"
                Value="CanResizeWithGrip" />
    </Style>

    <!-- ScrollViewer  -->
    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <!--Thumb color-->
                        <Border Background="#646465"
                                CornerRadius="3" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Opacity"
                Value="0.2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Opacity"
                Value="0.2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--up down button-->
    <Style x:Key="VerticalScrollBarPageButton2"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Opacity"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="#90000000"
                               Width="0"
                               Height="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="for_scrollbar"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="false" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Margin"
                Value="0,1,1,6" />
        <Setter Property="Width"
                Value="3" />
        <Setter Property="MinWidth"
                Value="1" />
        <Setter Property="Opacity"
                Value="0.2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg"
                          SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <RepeatButton  Grid.Row="0"
                                       Style="{StaticResource VerticalScrollBarPageButton2}"
                                       Command="{x:Static ScrollBar.PageUpCommand}" />
                        <Track x:Name="PART_Track"
                               Grid.Row="1"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                              Command="{x:Static ScrollBar.PageUpCommand}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                              Command="{x:Static ScrollBar.PageDownCommand}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Grid.Row="2"
                                      Style="{StaticResource VerticalScrollBarPageButton2}"
                                      Command="{x:Static ScrollBar.PageDownCommand}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Margin"
                        Value="1,0,6,1" />
                <Setter Property="Height"
                        Value="5" />
                <Setter Property="MinHeight"
                        Value="5" />
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Opacity"
                        Value="0.2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg"
                                  SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageRightCommand}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="for_scrollviewer"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter  Cursor="{TemplateBinding Cursor}"
                                                     Margin="{TemplateBinding Padding}"
                                                     ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       HorizontalAlignment="Right"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Orientation="Vertical"
                                       Style="{StaticResource for_scrollbar}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Orientation="Horizontal"
                                       Style="{StaticResource for_scrollbar}"
                                       VerticalAlignment="Bottom"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.8"
                                                     Duration="0:0:1" />
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.2"
                                                     Duration="0:0:1"
                                                     BeginTime="0:0:1" />
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.8"
                                                     Duration="0:0:1" />
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.2"
                                                     Duration="0:0:1"
                                                     BeginTime="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter"
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.8"
                                                     Duration="0:0:0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.2"
                                                     Duration="0:0:0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter"
                                      SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.8"
                                                     Duration="0:0:0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"
                                      SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.2"
                                                     Duration="0:0:0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Combox style-->
    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="Black" />
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxToggleButton"
                     TargetType="ToggleButton">
        <Border BorderBrush="{TemplateBinding Background}"
                BorderThickness="1"
                CornerRadius="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="0" />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0"
                        BorderThickness="1,1,0,1"
                        Background="White"
                        BorderBrush="DarkGray" />
                <Border Grid.Column="1"
                        Background="{StaticResource blue1}"
                        Margin="0,3" />
                <Border Grid.Column="2"
                        Cursor="Hand"
                        Background="{StaticResource  blue1}" />
                <!--<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="16,16,10,10" Stretch="Fill" Fill="#2c303c" />-->
                <Path Name="PathFill"
                      Grid.Column="2"
                      Fill="White"
                      Width="8"
                      Height="8"
                      StrokeThickness="0"
                      Data="M5,0 L10,10 L0,10 z"
                      RenderTransformOrigin="0.5,0.5"
                      Stretch="Fill">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform Angle="180" />
                            <TranslateTransform />
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style  TargetType="ComboBox">
        <Setter Property="Foreground"
                Value="Black"></Setter>
        <Setter Property="FontSize"
                Value="12"></Setter>
        <Setter Property="FontFamily"
                Value="Arial"></Setter>
        <Setter Property="FontWeight"
                Value="Medium"></Setter>
        <Setter Property="Height"
                Value="40"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                        <ToggleButton Grid.Column="2"
                                      Background="{TemplateBinding Background}"
                                      Template="{DynamicResource ComboBoxToggleButton}"
                                      x:Name="ToggleButton"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press" />
                        <ContentPresenter  HorizontalAlignment="Left"
                                           Margin="3,3,23,3"
                                           x:Name="ContentSite"
                                           VerticalAlignment="Center"
                                           Content="{TemplateBinding SelectionBoxItem}"
                                           ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                           ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                           IsHitTestVisible="False" />
                        <!-- 必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它 -->
                        <TextBox  Visibility="Hidden"
                                  Template="{DynamicResource ComboBoxTextBox}"
                                  HorizontalAlignment="Left"
                                  Margin="3,3,23,3"
                                  x:Name="PART_EditableTextBox"
                                  Style="{x:Null}"
                                  VerticalAlignment="Center"
                                  Focusable="True"
                                  Background="{TemplateBinding Background}"
                                  IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               x:Name="Popup"
                               Focusable="False"
                               AllowsTransparency="True"
                               PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  x:Name="DropDown"
                                  SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                        BorderThickness="1" />
                                <ScrollViewer Margin="4,3,4,3"
                                              SnapsToDevicePixels="True"
                                              HorizontalScrollBarVisibility="Auto"
                                              VerticalScrollBarVisibility="Auto"
                                              CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                Background="{TemplateBinding Background}" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>